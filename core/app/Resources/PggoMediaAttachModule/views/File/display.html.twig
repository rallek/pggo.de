{# purpose of this template: files display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'PggoMediaAttachModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ file.getTitleFromDisplayPattern()|default(__('File')) }}{% endblock %}
{% block title %}
    {% set templateTitle = file.getTitleFromDisplayPattern()|default(__('File')) %}
    {{ templateTitle|notifyFilters('pggomediaattachmodule.filter_hooks.files.filter') }}


{% endblock %}

{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="pggomediaattachmodule-file pggomediaattachmodule-display">


    <dl>


        {% if file.fileName is not empty %}
           
            <dd>{% if file.fileNameMeta|default %}
            <a href="{{ file.fileNameUrl }}" title="{{ file.getTitleFromDisplayPattern()|e('html_attr') }}"{% if file.fileNameMeta.isImage %} class="image-link"{% endif %}>
            {% if file.fileNameMeta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'fileFileName') %}
                <img src="{{ file.fileName.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ file.getTitleFromDisplayPattern()|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ file.fileNameMeta.size|pggomediaattachmodule_fileSize(file.fileName.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% endif %}
            </dd>
        {% endif %}
        
    </dl>
	

	


    {% if not isQuickView %}
        {# include display hooks #}
        {{ block('display_hooks') }}
    {% endif %}
</div>
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='pggomediaattachmodule.ui_hooks.files.display_view', id=file.id, urlObject=currentUrlObject) %}
    {% for providerArea, hook in hooks if providerArea != 'provider.scribite.ui_hooks.editor' %}
        {{ hook }}
    {% endfor %}
{% endblock %}
