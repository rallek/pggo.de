{# purpose of this template: infos display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'RKHelperModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ info.getTitleFromDisplayPattern()|default(__('Info')) }}{% endblock %}
{% block title %}
    {% set templateTitle = info.getTitleFromDisplayPattern()|default(__('Info')) %}
    {{ templateTitle|notifyFilters('rkhelpermodule.filter_hooks.infos.filter') }}
    {% set itemActions = knp_menu_get('RKHelperModule:ItemActionsMenu:menu', [], { entity: info, area: routeArea, context: 'display' }) %}
    <div class="dropdown">
        <a id="itemActions{{ info.id }}DropDownToggle" role="button" data-toggle="dropdown" data-target="#" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, { template: 'ZikulaMenuModule:Override:actions.html.twig' }) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="rkhelpermodule-info rkhelpermodule-display">


    <dl>
        {% if info.infoTitle is not empty %}
            <dt>{{ __('Info title') }}</dt>
            <dd>{{ info.infoTitle }}</dd>
        {% endif %}
        {% if info.infoDescription is not empty %}
            <dt>{{ __('Info description') }}</dt>
            <dd>{{ info.infoDescription|safeHtml }}</dd>
        {% endif %}
        {% if info.infoLocale is not empty %}
            <dt>{{ __('Info locale') }}</dt>
            <dd>{{ info.infoLocale|languageName }}</dd>
        {% endif %}
        
    </dl>
    {{ include('@RKHelperModule/Helper/includeStandardFieldsDisplay.html.twig', { obj: info }) }}

    {% if not isQuickView %}
        {# include display hooks #}
        {{ block('display_hooks') }}
    {% endif %}
</div>
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='rkhelpermodule.ui_hooks.infos.display_view', id=info.id, urlObject=currentUrlObject) %}
    {% for providerArea, hook in hooks if providerArea != 'provider.scribite.ui_hooks.editor' %}
        {{ hook }}
    {% endfor %}
{% endblock %}
