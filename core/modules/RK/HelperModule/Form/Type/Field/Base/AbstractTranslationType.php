<?php
/**
 * Helper.
 *
 * @copyright Ralf Koester (RK)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Ralf Koester <ralf@familie-koester.de>.
 * @link http://k62.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace RK\HelperModule\Form\Type\Field\Base;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use RK\HelperModule\Form\EventListener\TranslationListener;

/**
 * Translations field type base class.
 */
abstract class AbstractTranslationType extends AbstractType
{
    /**
     * @var TranslationListener
     */
    private $translationListener;

    /**
     * TranslationsType constructor.
     */
    public function __construct()
    {
        $this->translationListener = new TranslationListener();
    }

    /**
     * {@inheritdoc}
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder->addEventSubscriber($this->translationListener);
    }

    /**
     * {@inheritdoc}
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver
            ->setDefaults([
                'by_reference' => false,
                'mapped' => false,
                'empty_data' => function (FormInterface $form) {
                    return new \Doctrine\Common\Collections\ArrayCollection();
                },
                'fields' => [],
                'mandatory_fields' => [],
                'values' => []
            ])
            ->setRequired(['fields'])
            ->setOptional(['mandatory_fields', 'values'])
            ->setAllowedTypes([
                'fields' => 'array',
                'mandatory_fields' => 'array',
                'values' => 'array'
            ])
        ;
    }

    /**
     * {@inheritdoc}
     */
    public function getBlockPrefix()
    {
        return 'rkhelpermodule_field_translation';
    }
}
