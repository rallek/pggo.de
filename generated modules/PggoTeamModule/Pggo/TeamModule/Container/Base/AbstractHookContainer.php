<?php
/**
 * Team.
 *
 * @copyright Ralf Koester (Pggo)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Ralf Koester <ralf@familie-koester.de>.
 * @link http://pggo.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace Pggo\TeamModule\Container\Base;

use Zikula\Bundle\HookBundle\AbstractHookContainer as ZikulaHookContainer;

use Zikula\Bundle\HookBundle\Bundle\SubscriberBundle;

/**
 * Base class for hook container methods.
 */
abstract class AbstractHookContainer extends ZikulaHookContainer
{
    /**
     * Define the hook bundles supported by this module.
     *
     * @return void
     */
    protected function setupHookBundles()
    {
        $bundle = new SubscriberBundle('PggoTeamModule', 'subscriber.pggoteammodule.ui_hooks.persons', 'ui_hooks', $this->__('pggoteammodule. Persons Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'pggoteammodule.ui_hooks.persons.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'pggoteammodule.ui_hooks.persons.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'pggoteammodule.ui_hooks.persons.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'pggoteammodule.ui_hooks.persons.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'pggoteammodule.ui_hooks.persons.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'pggoteammodule.ui_hooks.persons.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'pggoteammodule.ui_hooks.persons.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('PggoTeamModule', 'subscriber.pggoteammodule.filter_hooks.persons', 'filter_hooks', $this->__('pggoteammodule. Persons Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'pggoteammodule.filter_hooks.persons.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        
        
    }
}
