<?php
/**
 * NewsDates.
 *
 * @copyright Ralf Koester (Pggo)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Ralf Koester <webmaster@pggo.de>.
 * @link http://pggo.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace Pggo\NewsDatesModule\Entity\Factory\Base;

use Doctrine\Common\Persistence\ObjectManager;
use Doctrine\ORM\EntityRepository;

/**
 * Factory class used to create entities and receive entity repositories.
 *
 * This is the base factory class.
 */
abstract class AbstractNewsDatesFactory
{
    /**
     * @var ObjectManager The object manager to be used for determining the repository
     */
    protected $objectManager;

    /**
     * NewsDatesFactory constructor.
     *
     * @param ObjectManager $objectManager The object manager to be used for determining the repositories
     */
    public function __construct(ObjectManager $objectManager)
    {
        $this->objectManager = $objectManager;
    }

    /**
     * Returns a repository for a given object type.
     *
     * @param string $objectType Name of desired entity type
     *
     * @return EntityRepository The repository responsible for the given object type
     */
    public function getRepository($objectType)
    {
        $entityClass = 'Pggo\\NewsDatesModule\\Entity\\' . ucfirst($objectType) . 'Entity';

        return $this->objectManager->getRepository($entityClass);
    }

    /**
     * Creates a new article instance.
     *
     * @return Pggo\NewsDatesModule\Entity\articleEntity The newly created entity instance
     */
    public function createArticle()
    {
        $entityClass = 'Pggo\\NewsDatesModule\\Entity\\ArticleEntity';

        return new $entityClass();
    }

    /**
     * Creates a new picture instance.
     *
     * @return Pggo\NewsDatesModule\Entity\pictureEntity The newly created entity instance
     */
    public function createPicture()
    {
        $entityClass = 'Pggo\\NewsDatesModule\\Entity\\PictureEntity';

        return new $entityClass();
    }

    /**
     * Creates a new event instance.
     *
     * @return Pggo\NewsDatesModule\Entity\eventEntity The newly created entity instance
     */
    public function createEvent()
    {
        $entityClass = 'Pggo\\NewsDatesModule\\Entity\\EventEntity';

        return new $entityClass();
    }

    /**
     * Returns the object manager.
     *
     * @return ObjectManager
     */
    public function getObjectManager()
    {
        return $this->objectManager;
    }
    
    /**
     * Sets the object manager.
     *
     * @param ObjectManager $objectManager
     *
     * @return void
     */
    public function setObjectManager($objectManager)
    {
        $this->objectManager = $objectManager;
    }
    
}
