{# purpose of this template: events display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'PggoNewsDatesModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ event.getTitleFromDisplayPattern()|default(__('Event')) }}{% endblock %}
{% block title %}
    {% set templateTitle = event.getTitleFromDisplayPattern()|default(__('Event')) %}
    {{ templateTitle|notifyFilters('pggonewsdatesmodule.filter_hooks.events.filter') }}
    {% set itemActions = knp_menu_get('PggoNewsDatesModule:ItemActionsMenu:menu', [], { entity: event, area: routeArea, context: 'display' }) %}
    <div class="dropdown">
        <a id="itemActions{{ event.id }}DropDownToggle" role="button" data-toggle="dropdown" data-target="#" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, { template: 'ZikulaMenuModule:Override:actions.html.twig' }) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="pggonewsdatesmodule-event pggonewsdatesmodule-display">


    <dl>
        {% if event.title is not empty %}
            <dt>{{ __('Title') }}</dt>
            <dd>{{ event.title }}</dd>
        {% endif %}
        {% if event.startDate is not empty %}
            <dt>{{ __('Start date') }}</dt>
            <dd>{{ event.startDate|localizeddate('medium', 'short') }}</dd>
        {% endif %}
        {% if event.duration is not empty %}
            <dt>{{ __('Duration') }}</dt>
            <dd>{{ event.duration }}</dd>
        {% endif %}
        {% if event.location is not empty %}
            <dt>{{ __('Location') }}</dt>
            <dd>{{ event.location }}</dd>
        {% endif %}
        {% if event.description is not empty %}
            <dt>{{ __('Description') }}</dt>
            <dd>{{ event.description|safeHtml }}</dd>
        {% endif %}
        {% if event.eventUrl is not empty %}
            <dt>{{ __('Event url') }}</dt>
            <dd>{% if event.eventUrl is not empty %}
            {% if not isQuickView %}
            <a href="{{ event.eventUrl }}" title="{{ __('Visit this page') }}" class="fa fa-external-link-square"></a>
            {% else %}
                {{ event.eventUrl }}
            {% endif %}
            {% else %}&nbsp;{% endif %}
            </dd>
        {% endif %}
        {% if event.article|default %}
            <dt>{{ __('Article') }}</dt>
            <dd>
              {% if not isQuickView %}
                  <a href="{{ path('pggonewsdatesmodule_article_' ~ routeArea ~ 'display', { 'id': event.article.id, 'slug': event.article.slug }) }}">{% spaceless %}
                    {{ event.article.getTitleFromDisplayPattern() }}
                  {% endspaceless %}</a>
                  <a id="articleItem{{ event.article.id }}Display" href="{{ path('pggonewsdatesmodule_article_' ~ routeArea ~ 'display', { 'id': event.article.id, 'slug': event.article.slug, 'raw': 1 }) }}" title="{{ __('Open quick view window')|e('html_attr') }}" class="pggonewsdates-inline-window hidden" data-modal-title="{{ event.article.getTitleFromDisplayPattern()|e('html_attr') }}"><span class="fa fa-id-card-o"></span></a>
              {% else %}
                  {{ event.article.getTitleFromDisplayPattern() }}
              {% endif %}
            </dd>
        {% endif %}
        
    </dl>
    {% if featureActivationHelper.isEnabled(constant('Pggo\\NewsDatesModule\\Helper\\FeatureActivationHelper::CATEGORIES'), 'event') %}
        {{ include('@PggoNewsDatesModule/Helper/includeCategoriesDisplay.html.twig', { obj: event }) }}
    {% endif %}
    {{ include('@PggoNewsDatesModule/Helper/includeStandardFieldsDisplay.html.twig', { obj: event }) }}

    {% if not isQuickView %}
        {# include display hooks #}
        {{ block('display_hooks') }}
    {% endif %}
</div>
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='pggonewsdatesmodule.ui_hooks.events.display_view', id=event.id, urlObject=currentUrlObject) %}
    {% for providerArea, hook in hooks if providerArea != 'provider.scribite.ui_hooks.editor' %}
        {{ hook }}
    {% endfor %}
{% endblock %}
