<?php
/**
 * NewsDates.
 *
 * @copyright Ralf Koester (Pggo)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Ralf Koester <webmaster@pggo.de>.
 * @link http://pggo.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

/**
 * Permission check for workflow schema 'standard'.
 * This function allows to calculate complex permission checks.
 * It receives the object the workflow engine is being asked to process and the permission level the action requires.
 *
 * @param array  $obj         The currently treated object
 * @param int    $permLevel   The required workflow permission level
 * @param int    $currentUser Id of current user
 * @param string $actionId    Id of the workflow action to be executed
 *
 * @return bool Whether the current user is allowed to execute the action or not
 */
function PggoNewsDatesModule_workflow_standard_permissioncheck($obj, $permLevel, $currentUser, $actionId)
{
    // every user is allowed to perform automatic archiving 
    if (true === \SessionUtil::getVar('PggoNewsDatesModuleAutomaticArchiving', false)) {
        return true;
    }

    // calculate the permission component
    $objectType = $obj['_objectType'];
    $component = 'PggoNewsDatesModule:' . ucfirst($objectType) . ':';

    // calculate the permission instance
    $instance = $obj->createCompositeIdentifier() . '::';

    // now perform the permission check
    $result = SecurityUtil::checkPermission($component, $instance, $permLevel, $currentUser);

    return $result;
}

/**
 * This helper functions cares for including the strings used in the workflow into translation.
 */
function PggoNewsDatesModule_workflow_standard_gettextstrings()
{
    $translator = \ServiceUtil::get('translator.default');

    return [
        'title' => $translator->__('Standard workflow (single approval)'),
        'description' => $translator->__('This is a two staged workflow with stages for untrusted submissions and finally approved publications. It does not allow corrections of non-editors to published pages.'),

        // state titles
        'states' => [
            $translator->__('Initial') => $translator->__('Pseudo-state for content which is just created and not persisted yet.'),
            $translator->__('Waiting') => $translator->__('Content has been submitted and waits for approval.'),
            $translator->__('Approved') => $translator->__('Content has been approved and is available online.'),
            $translator->__('Suspended') => $translator->__('Content has been approved, but is temporarily offline.'),
            $translator->__('Archived') => $translator->__('Content has reached the end and became archived.'),
            $translator->__('Deleted') => $translator->__('Pseudo-state for content which has been deleted from the database.')
        ],

        // action titles and descriptions for each state
        'actions' => [
            'initial' => [
                $translator->__('Submit') => $translator->__('Submit content for acceptance by a moderator.'),
                $translator->__('Submit and Approve') => $translator->__('Submit content and approve immediately.'),
            ]
            ,
            'waiting' => [
                $translator->__('Update') => $translator->__('Update content.'),
                $translator->__('Approve') => $translator->__('Update content and approve for immediate publishing.'),
                $translator->__('Delete') => $translator->__('Delete content permanently.')
            ]
            ,
            'approved' => [
                $translator->__('Update') => $translator->__('Update content.'),
                $translator->__('Unpublish') => $translator->__('Hide content temporarily.'),
                $translator->__('Archive') => $translator->__('Move content into the archive.'),
                $translator->__('Delete') => $translator->__('Delete content permanently.')
            ]
            ,
            'suspended' => [
                $translator->__('Update') => $translator->__('Update content.'),
                $translator->__('Publish') => $translator->__('Make content available again.'),
                $translator->__('Archive') => $translator->__('Move content into the archive.'),
                $translator->__('Delete') => $translator->__('Delete content permanently.')
            ]
            ,
            'archived' => [
                $translator->__('Update') => $translator->__('Update content.'),
                $translator->__('Delete') => $translator->__('Delete content permanently.')
            ]
            ,
            'deleted' => [
            ]
        ]
    ];
}
