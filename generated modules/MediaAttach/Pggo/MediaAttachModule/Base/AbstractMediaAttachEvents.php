<?php
/**
 * MediaAttach.
 *
 * @copyright Ralf Koester (Pggo)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Ralf Koester <ralf@familie-koester.de>.
 * @link http://pggo.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace Pggo\MediaAttachModule\Base;

/**
 * Events definition base class.
 */
abstract class AbstractMediaAttachEvents
{
    /**
     * The pggomediaattachmodule.file_post_load event is thrown when files
     * are loaded from the database.
     *
     * The event listener receives an
     * Pggo\MediaAttachModule\Event\FilterFileEvent instance.
     *
     * @see Pggo\MediaAttachModule\Listener\EntityLifecycleListener::postLoad()
     * @var string
     */
    const FILE_POST_LOAD = 'pggomediaattachmodule.file_post_load';
    
    /**
     * The pggomediaattachmodule.file_pre_persist event is thrown before a new file
     * is created in the system.
     *
     * The event listener receives an
     * Pggo\MediaAttachModule\Event\FilterFileEvent instance.
     *
     * @see Pggo\MediaAttachModule\Listener\EntityLifecycleListener::prePersist()
     * @var string
     */
    const FILE_PRE_PERSIST = 'pggomediaattachmodule.file_pre_persist';
    
    /**
     * The pggomediaattachmodule.file_post_persist event is thrown after a new file
     * has been created in the system.
     *
     * The event listener receives an
     * Pggo\MediaAttachModule\Event\FilterFileEvent instance.
     *
     * @see Pggo\MediaAttachModule\Listener\EntityLifecycleListener::postPersist()
     * @var string
     */
    const FILE_POST_PERSIST = 'pggomediaattachmodule.file_post_persist';
    
    /**
     * The pggomediaattachmodule.file_pre_remove event is thrown before an existing file
     * is removed from the system.
     *
     * The event listener receives an
     * Pggo\MediaAttachModule\Event\FilterFileEvent instance.
     *
     * @see Pggo\MediaAttachModule\Listener\EntityLifecycleListener::preRemove()
     * @var string
     */
    const FILE_PRE_REMOVE = 'pggomediaattachmodule.file_pre_remove';
    
    /**
     * The pggomediaattachmodule.file_post_remove event is thrown after an existing file
     * has been removed from the system.
     *
     * The event listener receives an
     * Pggo\MediaAttachModule\Event\FilterFileEvent instance.
     *
     * @see Pggo\MediaAttachModule\Listener\EntityLifecycleListener::postRemove()
     * @var string
     */
    const FILE_POST_REMOVE = 'pggomediaattachmodule.file_post_remove';
    
    /**
     * The pggomediaattachmodule.file_pre_update event is thrown before an existing file
     * is updated in the system.
     *
     * The event listener receives an
     * Pggo\MediaAttachModule\Event\FilterFileEvent instance.
     *
     * @see Pggo\MediaAttachModule\Listener\EntityLifecycleListener::preUpdate()
     * @var string
     */
    const FILE_PRE_UPDATE = 'pggomediaattachmodule.file_pre_update';
    
    /**
     * The pggomediaattachmodule.file_post_update event is thrown after an existing new file
     * has been updated in the system.
     *
     * The event listener receives an
     * Pggo\MediaAttachModule\Event\FilterFileEvent instance.
     *
     * @see Pggo\MediaAttachModule\Listener\EntityLifecycleListener::postUpdate()
     * @var string
     */
    const FILE_POST_UPDATE = 'pggomediaattachmodule.file_post_update';
    
}
